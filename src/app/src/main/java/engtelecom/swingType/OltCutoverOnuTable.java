/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package engtelecom.swingType;

import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author faber222
 */
public class OltCutoverOnuTable extends javax.swing.JFrame {

    // /**
    // * @param args the command line arguments
    // */
    // public static void main(final String args[]) {
    // /* Set the Nimbus look and feel */
    // //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code
    // (optional) ">
    // /* If Nimbus (introduced in Java SE 6) is not available, stay with the
    // default look and feel.
    // * For details see
    // http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
    // */
    // try {
    // for (final javax.swing.UIManager.LookAndFeelInfo info :
    // javax.swing.UIManager.getInstalledLookAndFeels()) {
    // if ("Nimbus".equals(info.getName())) {
    // javax.swing.UIManager.setLookAndFeel(info.getClassName());
    // break;
    // }
    // }
    // } catch (final ClassNotFoundException ex) {
    // java.util.logging.Logger.getLogger(OltCutoverOnuTable.class.getName()).log(java.util.logging.Level.SEVERE,
    // null, ex);
    // } catch (final InstantiationException ex) {
    // java.util.logging.Logger.getLogger(OltCutoverOnuTable.class.getName()).log(java.util.logging.Level.SEVERE,
    // null, ex);
    // } catch (final IllegalAccessException ex) {
    // java.util.logging.Logger.getLogger(OltCutoverOnuTable.class.getName()).log(java.util.logging.Level.SEVERE,
    // null, ex);
    // } catch (final javax.swing.UnsupportedLookAndFeelException ex) {
    // java.util.logging.Logger.getLogger(OltCutoverOnuTable.class.getName()).log(java.util.logging.Level.SEVERE,
    // null, ex);
    // }
    // //</editor-fold>
    // //</editor-fold>
    // //</editor-fold>
    // //</editor-fold>

    // /* Create and display the form */
    // java.awt.EventQueue.invokeLater(new Runnable() {
    // public void run() {
    // new OltCutoverOnuTable().setVisible(true);
    // }
    // });
    // }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonOk;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JTable jTableOnu;

    private final ArrayList<String> slot;
    private final ArrayList<String> pon;
    private final ArrayList<String> onu;
    private final List<String[]> onuSelecionada;

    private OltCutoverOnuTableListener listener;

    /**
     * Creates new form OltCutoverTable
     */
    public OltCutoverOnuTable(final ArrayList<String> slot, final ArrayList<String> pon, final ArrayList<String> onu) {
        this.slot = slot;
        this.pon = pon;
        this.onu = onu;
        this.onuSelecionada = new ArrayList<>();
        initComponents();
    }

    public void setListener(final OltCutoverOnuTableListener listener) {
        this.listener = listener;
    }

    /**
     * [0] Slot
     * [1] Pon
     * [2] Onu
     * 
     * Add uma lista de strings contendo as onus selecionadas para a
     * migração
     */
    private void getOnuSelecionada() {
        final javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) jTableOnu.getModel();

        for (int i = 0; i < model.getRowCount(); i++) {
            final Boolean selecionado = (Boolean) model.getValueAt(i, 3);
            if (Boolean.TRUE.equals(selecionado)) {
                final String slotValido = model.getValueAt(i, 0).toString(); // slot
                final String ponValido = model.getValueAt(i, 1).toString(); // pon
                final String onuValido = model.getValueAt(i, 2).toString(); // onu
                onuSelecionada.add(new String[] { slotValido, ponValido, onuValido });
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableOnu = new javax.swing.JTable();
        jButtonOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(null);
        setResizable(false);

        jTableOnu.setModel(new javax.swing.table.DefaultTableModel(
                getTableData(), // Método que retorna os dados formatados
                new String[] { "SLOT", "PON", "ONU", "" }) {
            Class<?>[] types = new Class[] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean[] {
                    false, false, false, true
            };

            @Override
            public Class<?> getColumnClass(final int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(final int rowIndex, final int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        jTableOnu.setToolTipText("Objetos");
        jTableOnu.setColumnSelectionAllowed(true);
        jTableOnu.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableOnu);
        jTableOnu.getColumnModel().getSelectionModel()
                .setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (jTableOnu.getColumnModel().getColumnCount() > 0) {
            jTableOnu.getColumnModel().getColumn(0).setResizable(false);
            jTableOnu.getColumnModel().getColumn(1).setResizable(false);
            jTableOnu.getColumnModel().getColumn(2).setResizable(false);
            jTableOnu.getColumnModel().getColumn(3).setResizable(false);
        }

        jButtonOk.setText("OK");
        jButtonOk.setToolTipText("");
        jButtonOk.addActionListener((final java.awt.event.ActionEvent evt) -> {
            jButtonOkActionPerformed();
        });

        final javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButtonOk, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                .addContainerGap())
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(164, Short.MAX_VALUE)
                                .addComponent(jButtonOk)
                                .addContainerGap())
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(35, Short.MAX_VALUE))));

        final javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Object[][] getTableData() {
        final int tamanho = Math.min(slot.size(), Math.min(pon.size(), onu.size()));
        final Object[][] data = new Object[tamanho][4];

        for (int i = 0; i < tamanho; i++) {
            data[i][0] = slot.get(i);
            data[i][1] = pon.get(i);
            data[i][2] = onu.get(i);
            data[i][3] = false; // Última coluna como padrão booleano
        }

        return data;
    }

    private void jButtonOkActionPerformed() {
        if (listener != null) {
            getOnuSelecionada();
            listener.onProfileCreatedOnuTable(this.onuSelecionada);
        }
        this.dispose(); // Fecha o JFrame
    }
}
